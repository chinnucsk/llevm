
# Global
ARCH=x86_64
CSRC=csrc
OBJ_DIR=obj.$(ARCH)

# llvm Variables
LLVM_CONFIG=@llvm_config_var@
LLVM_CCFLAGS=$(shell $(LLVM_CONFIG) --cppflags)
LLVM_LDFLAGS=$(shell $(LLVM_CONFIG) --ldflags) `$(LLVM_CONFIG) --libs`

# Erlang Variables
ERL_TOP=@ERLANG_ROOT_DIR@
ERL=$(ERL_TOP)/bin/erl

# CPP Variables
CXX=@CXX@
LINKER=@CXX@
CFLAGS=@CFLAGS@
CPPFLAGS=@CPPFLAGS@
LDFLAGS=@LDFLAGS@
CPPFLAGS+=$(LLVM_CCFLAGS) -I @ERTS_DIR@/include/ $(CFLAGS)
LDFLAGS+=$(LLVM_LDFLAGS)
OBJ_FILES=$(patsubst $(CSRC)/%.cc, $(OBJ_DIR)/%.o, $(wildcard $(CSRC)/*.cc))
HH_FILES=$(wildcard $(CSRC)/*.hh)

all: compile

compile: priv/$(ARCH)/llevm.so
	./rebar $@
	@erl -noshell -pa ebin -eval "code:load_file(llvm_nif)." -s init stop

$(OBJ_DIR)/%.o: $(CSRC)/%.cc $(HH_FILES) $(OBJ_DIR)
	$(CC) -c $(CPPFLAGS) -o $@ $<

priv/$(ARCH)/llevm.so: $(OBJ_FILES) priv/$(ARCH)
	$(LINKER) $(OBJ_FILES) $(LDFLAGS) -o $@

priv/$(ARCH) $(OBJ_DIR):
	@mkdir -p $@

clean:
	./rebar $@
	rm -rf $(OBJ_DIR) priv

very_clean: clean
	rm -rf config.status autom4te.cache Makefile config.log

shell:
	erl -pa ebin